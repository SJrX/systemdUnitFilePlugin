import org.gradle.internal.os.OperatingSystem
import org.jetbrains.grammarkit.tasks.GenerateLexer
import org.jetbrains.grammarkit.tasks.GenerateParser

plugins {
  id 'java'
  id "org.jetbrains.intellij" version "1.8.0"
  id "org.jetbrains.grammarkit" version "2021.1.3"
  id 'checkstyle'
  id "com.avast.gradle.docker-compose" version "0.16.4"
}

dockerCompose {
  dockerComposeWorkingDirectory = project.file("./systemd-build/")
}

group 'net.sjrx.intellij.plugins'
version '0.3.9'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(11)
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation('commons-io:commons-io:2.7')
  implementation('com.google.guava:guava:31.1-jre')
  testImplementation('junit:junit:4.13.1')
}

intellij {
  //version 'LATEST-EAP-SNAPSHOT'
  version = '2022.1'
}


patchPluginXml {
  changeNotes = """
  <h3>v0.3.9</h3>
    <ul>
      <li>Add support for IntelliJ 2022.2 <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/143">#143</a></li>
    </ul>
  <h3>v0.3.8</h3>
    <ul>
      <li>Fix weak warning for absolute paths when using allowed prefix <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/141">#141</a></li>
    </ul>
  <h3>v0.3.7</h3>
    <ul>
      <li>Update build to be based off of systemd v251 <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/131">#131</a></li>
      <li>Fix NPE in some cases when getting doc link <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/114">#114</a></li>
      <li>Validation warning when shell meta-characters are in an Exec directive <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/60">#60</a></li>
      <li>Add support for auto-completion / validation of Unit options <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/102">#102</a></li>
      <li>Add weak warning when an absolute path isn't used on an Exec directive<a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/133">#133</a></li>
      <li>Fix missing documentation for Condition= and Assert directives <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/96">#96</a></li>
    </ul>
  <h3>v0.3.6</h3>
    <ul>
      <li>Add support for Go Land 2022.1<a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/128">#128</a></li>
    </ul>
  <h3>v0.3.5</h3>
    <ul>
      <li>Add support for IntelliJ 2022.1 <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/126">#126</a></li>
    </ul>
  <h3>v0.3.4</h3>
    <ul>
      <li>Add support for IntelliJ 2021.3 <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/119">#119</a></li>
      <li>Remove support for IntelliJ 2021.1, due to plugin compatibility fixes</li>
      <li>Fix file type issue description <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/106"/>#106</a></li>
      <li>Fix deprecation warnings <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/123"/>#123</a></li>
    </ul>
  <h3>v0.3.3</h3>
    <ul>
      <li>Add support for IntelliJ 2021.2 <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/111">#111</a></li>
    </ul>
  <h3>v0.3.2</h3>
    <ul>
      <li>Add support for IntelliJ 2021.1 <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/107">#107</a></li>"
    </ul>
  <h3>v0.3.1</h3>
    <ul>
      <li>Add support for IntelliJ 2020.3 and systemd v247 <a href="https://github.com/SJrX/systemdUnitFilePlugin/issue-103">#103</a> (drops support for 2020.2 <a href="https://blog.jetbrains.com/platform/2020/09/intellij-project-migrates-to-java-11/">due to Java 11 Upgrade</a>) </li>
    </ul>
  <h3>v0.3.0</h3>
    <ul>
      <li>Add support for IntelliJ 2020.2 (and drops support for anything before IntelliJ 2020.1) <a href="https://github.com/SJrX/systemdUnitFilePlugin/pull/92">#92</a></li>
      <li>Add support for systemd v245 (and maybe a little bit of v246) <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/95">#95</a></li>
    </ul>
  <h3>v0.2.6</h3>
  <ul>
    <li>Improved Error Handling, Memory Management, Misc fixes <a href="https://github.com/SJrX/systemdUnitFilePlugin/pull/88">#88></a></li>
    <li>New plugin logo <a href="https://github.com/SJrX/systemdUnitFilePlugin/pull/92">#92</a></li>
  </ul>
  <h3>v0.2.5</h3>
  <ul>
    <li>Add support IntelliJ 2020.1 <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/86">#86</a>
  </ul>
  <h3>v0.2.5</h3>
  <ul>
    <li>Add support IntelliJ 2020.1 <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/86">#86</a>
  </ul>
  <h3>v0.2.4</h3>
  <ul>
    <li>Add support for systemd v244 <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/85">#85</a></li>
    <li>Change Logo<a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/84">#84</a></li>
    <li>Add support IntelliJ 2019.3 <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/82">#82</a>
  </ul>
  <h3>v0.2.3</h3>
  <ul>
    <li>Add support for systemd v243 <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/79">#79</a></li>
  </ul>
  <h3>v0.2.2</h3>
  <ul>
    <li>Add support for IntelliJ 2019.2 <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/76">#76</a></li>
  </ul>
  <h3>v0.2.1</h3>
  <ul>
    <li>Add support for IntelliJ 2019.1 <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/73">#73</a></li>
    <li>Add support for <em>all</em> deprecated / undocumented options <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/67">#67</a>
    , <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/71">#71</a></li>
  </ul>
  <h3>v0.2.0</h3>
  <ul>
    <li>Updating syntax highlighting to properly handle comments with line continuations.</li>
    <li>Warning when line continuation character is followed by whitespace</li>
    <li>New inspection for deprecated options</li>
  <h3>v0.1.2</h3>
  <ul>
    <li>Added support for systemd v240 keywords.</li>
    <li>Fixed bug with tab character causing issues with syntax highlighting <a href="https://github.com/SJrX/systemdUnitFilePlugin/issues/51">#51</a>.</li>
  </ul>
  <h3>v0.1.1</h3>
  <ul>
    <li>Added support for IntelliJ 2018.3.</li>
  </ul>
  <h3>v0.1.0</h3>
  <ul>
    <li>Initial Release.</li>
  </ul>
"""
  sinceBuild = '221.0'
  untilBuild = '222.0'
}

// Add generated sources root
sourceSets.main.java.srcDirs += 'src/main/gen'

apply plugin: "idea"

idea {
  module {
    generatedSourceDirs += file('src/main/gen')

    downloadJavadoc = true
    downloadSources = true
  }
}

/*
 * CI Tasks
 */
checkstyle {
  // Exclude the generated sources
  checkstyleMain.source = "src/main/java"
  toolVersion "8.11"
}

test {
  testLogging {
    exceptionFormat = 'full'
  }
}

/*
 * Build Tasks
 */
task generateDataFromManPages(type: GenerateDataFromManPages) {
  description "Regenerate semantic data (used for documentation and inspections) by parsing the documentation from systemd git repository"
  group "generation"

  systemdSourceCodeRoot = file("./systemd-build/build/")
  generatedJsonFileLocation =
    file(sourceSets.main.output.resourcesDir.getAbsolutePath() + "/net/sjrx/intellij/plugins/systemdunitfiles/semanticdata")
}
/*
 * Lexing / Parsing and Grammar Tasks
 */

apply plugin: 'org.jetbrains.grammarkit'
// import is optional to make task creation easier

task generateLexer(type: GenerateLexer) {
  description "Generate the lexer necessary for parsing unit files using JFlex"
  group "generation"

  source = "src/main/resources/net/sjrx/intellij/plugins/systemdunitfiles/lexer/SystemdUnitFile.flex"
  targetDir = "src/main/gen/net/sjrx/intellij/plugins/systemdunitfiles/generated/"
  targetClass = "UnitFileLexer"
  purgeOldFiles = true
}

task generateParser(type: GenerateParser) {
  description "Generate the grammar necessary for parsing unit files using GrammarKit"
  group "generation"
  source = "src/main/resources/net/sjrx/intellij/plugins/systemdunitfiles/grammar/SystemdUnitFile.bnf"
  targetRoot = "src/main/gen/"

  // path to a parser file, relative to the targetRoot
  pathToParser = 'src/main/gen/net/sjrx/intellij/plugins/systemdunitfiles/generated/UnitFileParser.java'

  // path to a directory with generated psi files, relative to the targetRoot
  pathToPsiRoot = 'src/main/gen/net/sjrx/intellij/plugins/systemdunitfiles/psi/'

  purgeOldFiles = true

  dependsOn generateLexer
}

task generateOptionValidator(type: Copy) {
  from "./systemd-build/build/load-fragment-gperf.gperf"
  into "${sourceSets.main.output.resourcesDir.getAbsolutePath()}/net/sjrx/intellij/plugins/systemdunitfiles/semanticdata/"
}

if (OperatingSystem.current().isLinux()) {
  /**
   * This setting controls how IntelliJ looks on linux, if you explore idea64.vmoptions you will see
   * these options included in the file.
   *
   * When the runIde task is being executed however it doesn't go through those files, and so the fonts end up looking like garbage.
   */
  runIde.environment("_JAVA_OPTIONS", "-Dawt.useSystemAAFontSettings=lcd -Dsun.java2d.renderer=sun.java2d.marlin.MarlinRenderingEngine")
}

generateLexer.mustRunAfter(compileJava)
//classes.dependsOn += generateParser
classes.dependsOn += generateOptionValidator

if (!(project.file("./systemd-build/build/load-fragment-gperf.gperf").exists())) {
  println("Could not find metadata file")
  generateOptionValidator.dependsOn += composeUp
}

if (!(project.file("./systemd-build/build/man").exists())) {
  println("Colud not find man pages")
  generateDataFromManPages.dependsOn += composeUp
}

task generateUnitAutoCompleteData(type: Copy) {
  from "./systemd-build/build/ubuntu-units.txt"
  into "${sourceSets.main.output.resourcesDir.getAbsolutePath()}/net/sjrx/intellij/plugins/systemdunitfiles/semanticdata/"
}


if (!(project.file("./systemd-build/build/ubuntu-units.txt").exists())) {
  println("Could not find ubuntu units")
  generateUnitAutoCompleteData.dependsOn += composeUp
}

jar.dependsOn += generateDataFromManPages
jar.dependsOn += generateOptionValidator
jar.dependsOn += generateUnitAutoCompleteData

